{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/chains": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chains"
                ],
                "summary": "Retrieve all chains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Chain"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chains"
                ],
                "summary": "Register a new chain",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chainmodel.CreateChainInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Chain"
                        }
                    }
                }
            }
        },
        "/chains/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chains"
                ],
                "summary": "Retrieve chain by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Chain"
                        }
                    }
                }
            },
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chains"
                ],
                "summary": "Update a chain",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chainmodel.PatchChainInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Chain"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HealthCheck"
                ],
                "summary": "Show the status of server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/schemas": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemas"
                ],
                "summary": "Retrieve all schemas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemamodel.SchemaOutput"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemas"
                ],
                "summary": "Create a new schema",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemamodel.CreateSchemaInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemamodel.SchemaOutput"
                        }
                    }
                }
            }
        },
        "/schemas/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemas"
                ],
                "summary": "Retrieve schema by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemamodel.SchemaOutput"
                        }
                    }
                }
            }
        },
        "/schemas/{id}/filters": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemas"
                ],
                "summary": "Retrieve schema filters by schema id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SchemaFilter"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemas"
                ],
                "summary": "Create a new schema filter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemamodel.CreateSchemaFilterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.SchemaFilter"
                        }
                    }
                }
            }
        },
        "/schemas/{id}/filters/{filterId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemas"
                ],
                "summary": "Retrieve schema filters by schema filter id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filterId",
                        "name": "filterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SchemaFilter"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "big.Int": {
            "type": "object"
        },
        "chainmodel.CreateChainInput": {
            "type": "object",
            "required": [
                "id",
                "rpcUrl"
            ],
            "properties": {
                "blockNumber": {
                    "type": "integer"
                },
                "blockNumberReadPeriodInMs": {
                    "type": "integer"
                },
                "blockNumberWaitPeriodInMs": {
                    "type": "integer"
                },
                "concurrentBlockReadLimit": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "paused": {
                    "type": "boolean"
                },
                "rpcUrl": {
                    "type": "string"
                }
            }
        },
        "chainmodel.PatchChainInput": {
            "type": "object",
            "properties": {
                "blockNumberReadPeriodInMs": {
                    "type": "integer"
                },
                "blockNumberWaitPeriodInMs": {
                    "type": "integer"
                },
                "concurrentBlockReadLimit": {
                    "type": "integer"
                },
                "paused": {
                    "type": "boolean"
                },
                "rpcUrl": {
                    "type": "string"
                }
            }
        },
        "model.Abi": {
            "type": "object",
            "properties": {
                "anonymous": {
                    "type": "boolean"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AbiInput"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.AbiInput": {
            "type": "object",
            "properties": {
                "indexed": {
                    "type": "boolean"
                },
                "internalType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Chain": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "$ref": "#/definitions/big.Int"
                },
                "blockNumberReadPeriodInMS": {
                    "type": "integer"
                },
                "blockNumberWaitPeriodInMS": {
                    "type": "integer"
                },
                "concurrentBlockReadLimit": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "paused": {
                    "type": "boolean"
                },
                "rpcUrl": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "model.SchemaEvent": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.SchemaFilter": {
            "type": "object",
            "properties": {
                "chainId": {
                    "type": "integer"
                },
                "contractAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "schemaId": {
                    "type": "string"
                },
                "sync": {
                    "$ref": "#/definitions/model.SchemaFilterSync"
                }
            }
        },
        "model.SchemaFilterSync": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "currentBlockNumber": {
                    "type": "integer"
                },
                "fromBlockNumber": {
                    "type": "integer"
                },
                "lastLogIndex": {
                    "type": "integer"
                },
                "toBlockNumber": {
                    "type": "integer"
                }
            }
        },
        "schemamodel.CreateSchemaFilterInput": {
            "type": "object",
            "required": [
                "chainId",
                "contractAddress"
            ],
            "properties": {
                "chainId": {
                    "type": "integer"
                },
                "contractAddress": {
                    "type": "string"
                },
                "sync": {
                    "type": "boolean"
                }
            }
        },
        "schemamodel.CreateSchemaInput": {
            "type": "object",
            "required": [
                "abi",
                "events",
                "name"
            ],
            "properties": {
                "abi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Abi"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SchemaEvent"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemamodel.SchemaOutput": {
            "type": "object",
            "properties": {
                "abi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Abi"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SchemaEvent"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}