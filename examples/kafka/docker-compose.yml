version: '3'

services:
  db:
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: connector
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sourcedb
    networks:
      - kafka-network

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - kafka-network

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zoo1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    networks:
      - kafka-network

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - kafka1
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    networks:
      - kafka-network

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - kafka2
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    networks:
      - kafka-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - 8081:8080 # Changed to avoid port clash with akhq
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:19092,kafka2:19093,kafka3:19094
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka-network

  connector:
    image: github.com/aliarbak/ethereum-connector
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - db
    ports:
      - 8080:80
    environment:
      DATA_SOURCE: postgres
      DATA_SOURCE_POSTGRES_CONNECTION_STRING: postgres://connector:password@db:5432/sourcedb
      DATA_SOURCE_PERSIST_RAW_TRANSACTION_LOGS: true
      DESTINATION: kafka
      DESTINATION_KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093,kafka3:9094
      DESTINATION_KAFKA_BLOCKS_TOPIC_NAME: blocks
      DESTINATION_KAFKA_TRANSACTIONS_TOPIC_NAME: transactions
      DESTINATION_KAFKA_TRANSACTION_LOGS_TOPIC_NAME: transaction_logs
      DESTINATION_KAFKA_RAW_TRANSACTION_LOGS_TOPIC_NAME: raw_transaction_logs
      DESTINATION_KAFKA_SEND_TRANSACTION_LOGS_TO_ALIAS_TOPICS: true
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge